# 指定action 名称
name: build docker image
# 指定触发时机
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
# 指定环境变量
env:
#  image_name: git_action-docker-ci_cd
  IMAGE_NAME: git_action-docker-ci_cd
  REGISTRY: outman2444
# 指定jobs
jobs:
  build_docker_image:
    # 在 ubuntu 环境中执行
    runs-on: ubuntu-latest
    steps:
      #  检出代码
      - name: checkout code
        uses: actions/checkout@v3
      # 设置java 环境
      - name: set up jdk 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8'
      #  编译打包
      - name: mvn build package
        run: mvn -B package --file pom.xml
      # 安装 cosign
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@7e0881f8fe90b25e305bbf0309761e9314607e25
        with:
          cosign-release: 'v1.9.0'
      # 设置docker build
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
      # 登录docker hub
      - name: login to docker hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      # 为docker 提取元数据
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{env.IMAGE_NAME}}
      # 构建 docker镜像  并发布到docker hub
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          github-token: ${{ secrets.DOCKER_HUB_PASSWORD }}
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      # 发布
      - name: Sign the published Docker image
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: cosign sign ${{ steps.meta.outputs.tags }}@${{ steps.build-and-push.outputs.digest }}